<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Usuario</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.min.css">

    <style>
        h2 {
            margin-top: 50px;
            margin-bottom: 50px;
            font-family: 'Montserrat', sans-serif;
            font-weight: bold;
        }

        label {
            font-family: 'Montserrat', sans-serif;
            font-weight: bold;
            font-size: larger
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-custom">
        <div class="container">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <span class="navbar-text">
                            ¡Bienvenido/a,
                            {{#if user.first_name}}{{user.first_name}}{{else}}{{user.name}}{{/if}}!
                        </span>
                    </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/products">Productos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/profile">Ir al perfil</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/carts/{{user.cartId}}">Ir al carrito</a>
                    </li>
                    {{#unless isAdmin}}
                    <li class="nav-item">
                        <a class="nav-link" href="/chat">Chat</a>
                    </li>
                    {{/unless}}
                    <li class="nav-item">
                        <a class="nav-link" id="logout-btn" href="#">Cerrar sesión</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="mb-4">Gestión de Usuario</h1>
        <div class="mb-3">
            <p><strong>Usuario:</strong> {{user.email}}</p>
            <p><strong>Membresia Actual:</strong> {{user.role}}</p>
        </div>

        <h2 class="mb-3">Subir Documentos</h2>
        <form id="uploadForm" enctype="multipart/form-data">
            <div class="form-group">
                <label for="profile">Imagen de Perfil:</label>
                <input type="file" class="form-control-file" id="profile" name="profile">
                <small id="profileStatus" class="form-text text-muted">
                    Estado:
                    {{#each user.documents}}
                    {{#if (eq name 'profile')}}
                    {{status}}
                    {{/if}}
                    {{/each}}
                    {{#unless (hasDocument user.documents 'profile')}}
                    pendiente
                    {{/unless}}
                </small>
            </div>

            <div class="form-group">
                <label for="product">Imagen de Producto:</label>
                <input type="file" class="form-control-file" id="product" name="product">
                <small id="productStatus" class="form-text text-muted">
                    Estado:
                    {{#each user.documents}}
                    {{#if (eq name 'product')}}
                    {{status}}
                    {{/if}}
                    {{/each}}
                    {{#unless (hasDocument user.documents 'product')}}
                    pendiente
                    {{/unless}}
                </small>
            </div>

            <div class="form-group">
                <label for="identificacion">Identificación: (Obligatorio)</label>
                <input type="file" class="form-control-file" id="identificacion" name="identificacion">
                <small id="identificacionStatus" class="form-text text-muted">
                    Estado:
                    {{#each user.documents}}
                    {{#if (eq name 'Identificación')}}
                    {{status}}
                    {{/if}}
                    {{/each}}
                    {{#unless (hasDocument user.documents 'Identificación')}}
                    pendiente
                    {{/unless}}
                </small>
            </div>

            <div class="form-group">
                <label for="comprobante_domicilio">Comprobante de Domicilio: (Obligatorio)</label>
                <input type="file" class="form-control-file" id="comprobante_domicilio" name="comprobante_domicilio">
                <small id="comprobanteDomicilioStatus" class="form-text text-muted">
                    Estado:
                    {{#each user.documents}}
                    {{#if (eq name 'Comprobante de domicilio')}}
                    {{status}}
                    {{/if}}
                    {{/each}}
                    {{#unless (hasDocument user.documents 'Comprobante de domicilio')}}
                    pendiente
                    {{/unless}}
                </small>
            </div>

            <div class="form-group">
                <label for="comprobante_estado_cuenta">Comprobante de Estado de Cuenta: (Obligatorio)</label>
                <input type="file" class="form-control-file" id="comprobante_estado_cuenta"
                    name="comprobante_estado_cuenta">
                <small id="comprobanteEstadoCuentaStatus" class="form-text text-muted">
                    Estado:
                    {{#each user.documents}}
                    {{#if (eq name 'Comprobante de estado de cuenta')}}
                    {{status}}
                    {{/if}}
                    {{/each}}
                    {{#unless (hasDocument user.documents 'Comprobante de estado de cuenta')}}
                    pendiente
                    {{/unless}}
                </small>
            </div>

            <button type="submit" class="btn btn-success">Subir Documentos</button>
        </form>
        <div>
            <h2 class="mb-3">Cambiar Rol de Usuario</h2>
            <form id="premiumForm" class="mb-2">
                <button type="submit" class="btn btn-warning" id="premiumBtn">Cambiar a Premium</button>
            </form>

            <form id="userForm" class="mb-4">
                <button type="submit" class="btn btn-secondary" id="userBtn">Cambiar a User</button>
            </form>
        </div>

    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>

    <script>
    document.getElementById('logout-btn').addEventListener('click', async function (event) {
        event.preventDefault();
        try {
            const response = await fetch('/api/sessions/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (response.ok) {
                window.location.href = '/login';
            } else {
                console.error('Error al cerrar sesión');
            }
        } catch (error) {
            console.error('Error al cerrar sesión:', error);
        }
    });

    const premiumForm = document.getElementById('premiumForm');
    const userForm = document.getElementById('userForm');
    const uploadForm = document.getElementById('uploadForm');

    premiumForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const currentRole = "{{user.role}}";
        if (currentRole === 'premium') {
            Swal.fire({
                icon: 'info',
                title: 'El usuario ya es Premium.',
            });
            return;
        }
        await updateUserRole('{{user._id}}', 'premium');
    });

    userForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const currentRole = "{{user.role}}";
        if (currentRole === 'user') {
            Swal.fire({
                icon: 'info',
                title: 'El usuario ya es User.',
            });
            return;
        }
        await updateUserRole('{{user._id}}', 'user');
    });

    async function updateUserRole(userId, role) {
        try {
            const response = await fetch(`/api/users/premium/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ role })
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || 'No se pudo cambiar el rol del usuario');
            }

            const data = await response.json();

            console.log('Respuesta del servidor:', data);

            Swal.fire({
                icon: 'success',
                title: `¡El rol del usuario se ha actualizado correctamente a ${data.role}!`,
            }).then(() => {
                location.reload(true);
            });

        } catch (error) {
            console.error('Error al cambiar el rol del usuario:', error);
            Swal.fire({
                icon: 'warning',
                title: 'Error al cambiar el rol del usuario',
                text: error.message,
            });
        }
    }

    uploadForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const requiredDocuments = ['identificacion', 'comprobante_domicilio', 'comprobante_estado_cuenta'];
        let allDocumentsUploaded = true;

        requiredDocuments.forEach(documentName => {
            const fileInput = document.getElementById(documentName);
            if (!fileInput.files.length) {
                allDocumentsUploaded = false;
            }
        });

        if (!allDocumentsUploaded) {
            Swal.fire({
                icon: 'warning',
                title: 'Faltan documentos',
                text: 'Por favor, sube todos los documentos requeridos.',
            });
            return;
        }

        const formData = new FormData(uploadForm);
        try {
            const userId = "{{user._id}}";
            const response = await fetch(`/api/users/${userId}/documents`, {
                method: 'POST',
                body: formData
            });

            if (!response.ok) {
                throw new Error('No se pudo subir los documentos');
            }

            const data = await response.json();

            Swal.fire({
                icon: 'success',
                title: '¡Los documentos se han subido correctamente!',
            }).then(() => {
                location.reload(true);
            });

        } catch (error) {
            console.error('Error al subir los documentos:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error al subir los documentos',
                text: 'Hubo un problema al intentar subir los documentos. Por favor, inténtelo de nuevo más tarde.',
            });
        }
    });
</script>

</body>

</html>