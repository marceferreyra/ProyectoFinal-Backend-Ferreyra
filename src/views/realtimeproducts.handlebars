<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Productos</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap">
    <style>
        h2 {
            margin-top: 50px;
            margin-bottom: 50px;
            font-family: 'Montserrat', sans-serif;
            font-weight: bold;
        }

        span {
            font-family: 'Montserrat', sans-serif;
            font-weight: bold;
            font-size: larger
        }

        .container {
            text-align: center;
            display: flex;
            width: 100%;
            padding: 0 15px;
            justify-content: center;
        }

        .card {
            display: flex;
            flex-direction: column;
            max-width: 500px;
            width: 100%;
            height: 700px;
            margin: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        .cards-container {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }

        .carousel-inner {
            height: 500px;
        }

        .carousel-item img {
            object-fit: contain;
            height: 100%;
            width: 100%;
        }

        .card-body {
            padding: 15px;
            text-align: center;
            height: 500px;
            border-top: 1px solid #ccc;
        }

        .card-title {
            font-size: 1.25rem;
            margin-bottom: 10px;
        }

        .card-text {
            margin-bottom: 10px;
        }

        .btn-primary {
            font-weight: bold;
            background-color: #638dd7;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            filter: invert(1);
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
        }

        .navbar-custom {
            background-color: #638dd7;
        }

        .navbar-custom .navbar-brand,
        .navbar-custom .navbar-nav .nav-link {
            color: #ffffff;
        }

        .navbar-custom .nav-link:hover {
            color: #ffffff;
        }

        .nav-link {
            font-weight: bold;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-custom">
        <div class="container">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                {{#if user}}
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <span class="navbar-text">
                            ¡Bienvenido/a, {{#if user.first_name}}{{user.first_name}}{{else}}{{user.name}}{{/if}}!
                        </span>
                    </li>
                </ul>
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/profile">Ir al perfil</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/carts/{{user.cartId}}">Ir al carrito</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="logout-btn" href="#">Cerrar sesión</a>
                    </li>
                </ul>
                {{else}}
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Iniciar sesión</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register">Registrarse</a>
                    </li>
                </ul>
                {{/if}}
            </div>
        </div>
    </nav>

    <div id="productForm">
        <form id="addProductForm">
            <div id="labelAddForm">
                <div>
                    <label for="productName">Nombre del Producto:</label>
                    <input type="text" id="productName" name="productName" required>
                </div>
                <div>
                    <label for="productDescription">Descripción del producto</label>
                    <input type="text" id="productDescription" name="productDescription" required>
                </div>
                <div>
                    <label for="productPrice">Precio: $ </label>
                    <input type="text" id="productPrice" name="productPrice" required>
                </div>
                <div>
                    <label for="productOwner"></label>
                    <input type="hidden" id="productOwner" name="productOwner" required>
                </div>
                <button type="submit" class="btn-primary">Agregar Producto</button>
            </div>
        </form>

        <form id="deleteProductForm">
            <div id="labelDeleteForm">
                <label for="productId">ID del Producto a Eliminar:</label>
                <input type="text" id="productId" name="productId" required>
                <button type="submit" class="btn-danger">Eliminar Producto</button>
            </div>
        </form>
    </div>
    </div>

    <div class="container">
        <h2>Lista de productos</h2>
    </div>


    {{#if products.length}}
    <div class="cards-container">
        {{#each products}}
        <div class="card" id="{{this.id}}">
            <div id="carousel-{{this.id}}" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    {{#each this.thumbnails}}
                    <div class="carousel-item {{#if @first}}active{{/if}}">
                        <img src="{{this}}" class="d-block w-100" alt="{{../title}}">
                    </div>
                    {{/each}}
                </div>
                <a class="carousel-control-prev" href="#carousel-{{this.id}}" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carousel-{{this.id}}" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
            <div class="card-body">
                <h5 class="card-title">{{this.title}}</h5>
                <p class="card-text">Precio: ${{this.price}}</p>
                <p class="card-text">Propietario: {{this.owner}}</p>
                <a href="products/{{this._id}}" class="btn btn-primary">Ver detalles</a>
            </div>
        </div>
        {{/each}}
    </div>
    {{else}}
    <p class="mt-4">No hay productos disponibles.</p>
    {{/if}}
    </div>

    <script src="https://cdn.socket.io/4.0.1/socket.io.min.js"></script>
    <script>
        document.getElementById('logout-btn').addEventListener('click', async function (event) {
            event.preventDefault();
            try {
                const response = await fetch('/api/sessions/logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (response.ok) {
                    window.location.href = '/login';
                } else {
                    console.error('Error al cerrar sesión');
                }
            } catch (error) {
                console.error('Error al cerrar sesión:', error);
            }
        });

        const socket = io.connect('http://localhost:8080');

        socket.on('updateProducts', (updatedProduct) => {
            console.log('Productos actualizados:', updatedProduct);

            const cardDeck = document.querySelector('.card-deck');

            if (updatedProduct.deletedProductId) {
                const deletedProductId = updatedProduct.deletedProductId;
                const productElement = document.getElementById(`product-${deletedProductId}`);

                if (productElement) {
                    productElement.remove();
                    console.log('Producto eliminado:', deletedProductId);
                }
            } else {
                const existingProductElement = document.getElementById(`product-${updatedProduct.id}`);

                if (existingProductElement) {
                    existingProductElement.querySelector('.card-title').textContent = updatedProduct.title;
                    existingProductElement.querySelector('.card-text').textContent = updatedProduct.description;
                    existingProductElement.querySelector('.card-price').textContent = `Precio: $${updatedProduct.price}`;
                    existingProductElement.querySelector('.card-owner').textContent = `Dueño: ${updatedProduct.owner}`;

                    const thumbnailsContainer = existingProductElement.querySelector('.thumbnails-container');
                    thumbnailsContainer.innerHTML = updatedProduct.thumbnails.map(url => `<img src="${url}" class="card-img-top" alt="${updatedProduct.title}">`).join('');
                } else {
                    const newProductCard = document.createElement('div');
                    newProductCard.className = 'card';
                    newProductCard.id = `product-${updatedProduct.id}`;

                    const thumbnails = updatedProduct.thumbnails.map(url => `<img src="${url}" class="card-img-top" alt="${updatedProduct.title}">`).join('');

                    newProductCard.innerHTML = `
                        <div class="thumbnails-container">
                            ${thumbnails}
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">${updatedProduct.title}</h5>
                            <p class="card-text">${updatedProduct.description}</p>
                            <p class="card-text card-price">Precio: $${updatedProduct.price}</p>
                            <p class="card-text card-owner">Dueño: ${updatedProduct.owner}</p>
                        </div>
                    `;

                    cardDeck.appendChild(newProductCard);
                    console.log('Producto agregado:', updatedProduct.id);
                }
            }
        });

        document.getElementById('addProductForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const productName = document.getElementById('productName').value;
            const productDescription = document.getElementById('productDescription').value;
            const productPrice = document.getElementById('productPrice').value;
            const productOwner = document.getElementById('productOwner').value;

            const newProduct = {
                title: productName,
                description: productDescription,
                price: productPrice,
                thumbnails: "",
                code: `code-${Date.now()}`,
                stock: 100,
                status: true,
                category: "calzado",
                owner: productOwner
            };

            try {
                const response = await fetch('/api/products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(newProduct),
                });
                const result = await response.json();

                console.log('Resultado de la respuesta del servidor:', result);

                if (response.ok && result.product) {
                    socket.emit('productAdded', result.product);
                } else {
                    console.error('Error en la respuesta del servidor:', result.error);
                }
            } catch (error) {
                console.error('Error en la solicitud:', error);
            }
        });

        document.getElementById('deleteProductForm').addEventListener('submit', async (event) => {
            event.preventDefault();
            const productId = document.getElementById('productId').value;

            try {
                const response = await fetch(`/api/products/${productId}`, {
                    method: 'DELETE',
                });
                const result = await response.json();

                if (response.ok) {
                    socket.emit('productDeleted', productId);
                } else {
                    alert(result.error);
                    console.error(result.error);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

    </script>
</body>

</html>